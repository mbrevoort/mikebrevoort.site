// =============================================================================
// Mixins
// =============================================================================

@mixin font-size($font-size) {
  font-size: ($font-size / $base-font-size) * 1rem;
}

@mixin font-combo($font-size, $line-height) {
  @include font-size($font-size);
  line-height: ($line-height / $font-size);
}

@mixin hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

@mixin inset-effect {
  border: 1px solid rgba(0, 0, 0, 0.2);
  @include box-shadow(0 1px 2px rgba(0, 0, 0, 0.2) inset, 0 1px 0 $white);
  background: rgba(0, 0, 0, 0.05);
}

@mixin keyline($position) {
  @if $position == top {
    border-top: 1px solid rgba(0, 0, 0, 0.2);
    @include box-shadow(0 1px 0 $white inset);
  }

  @if $position == bottom {
    border-bottom: 1px solid rgba(0, 0, 0, 0.2);
    @include box-shadow(0 1px 0 $white);
  }

  @if $position == none {
    border: none;
    @include box-shadow(none);
  }
}

// Sassy math
// =====================================

// Variables
$pi: 3.1415926535897932384626433832795028841971693993751;
$π: $pi;
$e: 2.71828182845904523536028747135266249775724709369995;

$iter: 50;

// Random number
@function rand() {
  @return 4;
}

// Percent
@function percent($number) {
  @return $number * 0.01;
}

// Exponent
@function exponent($base, $exponent) {
  $value: $base;
  @if $exponent > 1 {
    @for $i from 2 through $exponent {
      $value: $value * $base; } }
  @if $exponent < 1 {
    @for $i from 0 through -$exponent {
      $value: $value / $base; } }
  @return $value;
}

@function pow($base, $exponent) {
  @return exponent($base, $exponent);
}


// Square roots
@function √($number) {
  @return sqrt($number);
}

@function sqrt($number) {
  $guess: rand();
  $root: $guess;
  @for $i from 1 through $iter {
    $root: $root - (pow($root, 2) - $number) / (2 * $root);
  }
  @return $root;
}
